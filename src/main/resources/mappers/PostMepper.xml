<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.proj.instagram.post.PostDAO">

    <!-- 게시글 작성자의 이메일로 게시글 조회 -->
    <select id="findByUserEmail" parameterType="String" resultType="PostDTO">
        SELECT POST_ID AS postId,
               EMAIL AS email,
               CONTENT AS content,
               IMAGE_PATH AS imagePath,
               CREATED_AT AS createdAt
        FROM insta_post
        WHERE EMAIL = #{email}
    </select>
    
    <select id="getLatestPostId" parameterType="String" resultType="int">
        SELECT MAX(POST_ID) FROM insta_post WHERE EMAIL = #{email}
    </select>
    
    <update id="updatePost" parameterType="PostDTO">
	    UPDATE insta_post
	    SET content = #{content},
	        image_path = #{imagePath},
	        post_pic_size = #{postPicSize}
	    WHERE post_id = #{postId}
    </update>
	<select id="getPostPicSize" parameterType="int" resultType="int">
	    SELECT COUNT(*) FROM insta_post WHERE post_id = #{postId}
	</select>
	<select id="getLikeCount" parameterType="int" resultType="int">
    	SELECT COALESCE(COUNT(*), 0) FROM insta_likes WHERE post_id = #{postId}
	</select>
	<select id="findRepliesByPostId" resultType="ReplyDTO" parameterType="int">
	    SELECT POST_ID AS postId, EMAIL AS email, USERNAME AS username, 
	           COMMENTS AS comments, USE_PROFILE_IMG AS useProfileImg, CREATED_AT AS createdAt
	    FROM INSTA_REPLY
	    WHERE POST_ID = #{postId}
	</select>
    <!-- 게시글 저장 -->
    <insert id="savePost" parameterType="PostDTO">
        INSERT INTO insta_post (EMAIL, CONTENT, IMAGE_PATH, CREATED_AT)
        VALUES (#{email}, #{content}, #{imagePath, jdbcType=VARCHAR}, SYSDATE)
    </insert>

    <!-- 게시글 ID로 게시글 조회 -->
    <select id="findPostById" parameterType="int" resultType="PostDTO">
        SELECT POST_ID AS postId,
               EMAIL AS email,
               USERNAME AS username,
               CONTENT AS content,
               IMAGE_PATH AS imagePath,
               CREATED_AT AS createdAt,
               LIKECOUNT AS likeCount
        FROM insta_post
        WHERE POST_ID = #{postId}
    </select>

    <!-- 댓글 저장 -->
    <insert id="insertReply" parameterType="ReplyDTO">
        INSERT INTO insta_reply (POST_ID, EMAIL, USERNAME, COMMENTS, USE_PROFILE_IMG, CREATED_AT)
        VALUES (#{postId}, #{email}, #{username}, #{comments}, #{useProfileImg, jdbcType=VARCHAR}, SYSDATE)
    </insert>

    <!-- 게시글 ID로 댓글 조회 -->
    <select id="selectRepliesByPostId" parameterType="int" resultType="ReplyDTO">
        SELECT POST_ID AS postId,
               EMAIL AS email,
               USERNAME AS username,
               COMMENTS AS comments,
               USE_PROFILE_IMG AS useProfileImg,
               CREATED_AT AS createdAt
        FROM insta_reply
        WHERE POST_ID = #{postId}
        ORDER BY CREATED_AT ASC
    </select>

</mapper>
